<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6YijoLuDAAAAAElFTkSuQmCC
</value>
  </data>
</root>